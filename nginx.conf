# /etc/nginx/sites-available/smart-copy.ai
# Redirect apex to www (HTTP)
server {
    listen 80;
    server_name smart-copy.ai;
    return 301 https://www.smart-copy.ai$request_uri;
}

# Redirect apex to www (HTTPS)
server {
    listen 443 ssl http2;
    server_name smart-copy.ai;

    ssl_certificate /etc/letsencrypt/live/smart-copy.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/smart-copy.ai/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    return 301 https://www.smart-copy.ai$request_uri;
}

# Main site - www only (HTTP to HTTPS)
server {
    listen 80;
    server_name www.smart-copy.ai;
    return 301 https://$server_name$request_uri;
}

# Main site - www only (HTTPS)
server {
    listen 443 ssl http2;
    server_name www.smart-copy.ai;

    ssl_certificate /etc/letsencrypt/live/smart-copy.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/smart-copy.ai/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    root /var/www/smart-copy.ai_new/frontend/dist;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /api/ {
        proxy_pass http://localhost:4000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# API subdomain (HTTP to HTTPS)
server {
    listen 80;
    server_name api.smart-copy.ai;
    return 301 https://$server_name$request_uri;
}

# API subdomain (HTTPS)
server {
    listen 443 ssl http2;
    server_name api.smart-copy.ai;

    ssl_certificate /etc/letsencrypt/live/api.smart-copy.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.smart-copy.ai/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://www.smart-copy.ai' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Add CORS headers to all responses
        add_header 'Access-Control-Allow-Origin' 'https://www.smart-copy.ai' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

        proxy_pass http://localhost:4000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}